networks:
  default:
    name: monitoring-network
  tk-proxy:
    name: tk-proxy
    external: true

services:
  alloy:
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data
      /etc/alloy/config.alloy
    container_name: alloy
    env_file:
    - .env
    environment:
      GRAFANA_CLOUD_API_KEY: ${GRAFANA_CLOUD_API_KEY}
      PROMETHEUS_USERNAME: ${PROMETHEUS_USERNAME}
    image: grafana/alloy:latest
    labels:
      traefik.enable: true
      traefik.http.routers.alloy.entrypoints: https
      traefik.http.routers.alloy.rule: Host(`alloy.local.xerogravity.space`)
      traefik.http.routers.alloy.service: alloy
      traefik.http.routers.alloy.tls: true
      traefik.http.services.alloy.loadbalancer.server.port: 12345
    networks:
    - default
    - tk-proxy
    restart: unless-stopped
    volumes:
    - type: bind
      source: ./container_data/alloy/config.alloy
      target: /etc/alloy/config.alloy
      read_only: false
  
  node-exporter:
    command:
    - --path.procfs=/host/proc
    - --path.rootfs=/rootfs
    - --path.sysfs=/host/sys
    - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    container_name: node-exporter
    image: prom/node-exporter:latest
    ports:
    - 9100:9100
    restart: unless-stopped
    volumes:
    - type: bind
      source: /
      target: /rootfs
      read_only: true
    - type: bind
      source: /proc
      target: /host/proc
      read_only: true
    - type: bind
      source: /sys
      target: /host/sys
      read_only: true
  
  cadvisor:
    container_name: cadvisor
    devices:
    - /dev/kmsg
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    ports:
    - 8090:8080
    privileged: true
    restart: unless-stopped
    volumes:
    - type: bind
      source: /
      target: /rootfs
      read_only: true
    - type: bind
      source: /dev/disk/
      target: /dev/disk
      read_only: true
    - type: bind
      source: /sys
      target: /sys
      read_only: true
    - type: bind
      source: /var/lib/docker/
      target: /var/lib/docker
      read_only: true
    - type: bind
      source: /var/run
      target: /var/run
      read_only: true
  
  dcgm-exporter:
    command: curl localhost:9400/metrics
    container_name: dcgm-exporter
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities:
            - gpu
    image: nvcr.io/nvidia/k8s/dcgm-exporter:3.3.7-3.5.0-ubuntu22.04
    ports:
    - 9400:9400
    restart: unless-stopped
