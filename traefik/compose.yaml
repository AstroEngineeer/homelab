networks:
  default:
    name: tk-proxy
    external: true

services:
  traefik:
    container_name: traefik
    env_file: .env
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    image: traefik:latest
    labels:
      traefik.enable: true
      traefik.http.middlewares.traefik.basicauth.users: ${TRAEFIK_DASHBOARD_CREDENTIALS}
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.middlewares: traefik
      traefik.http.routers.traefik.rule: Host(`traefik.local.xerogravity.space`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: cloudflare
      traefik.http.routers.traefik.tls.domains[0].main: local.xerogravity.space
      traefik.http.routers.traefik.tls.domains[0].sans: '*.local.xerogravity.space'
      traefik.http.routers.traefik.tls.domains[1].main: ts.xerogravity.space
      traefik.http.routers.traefik.tls.domains[1].sans: '*.ts.xerogravity.space'
      traefik.http.routers.traefik.tls.domains[2].main: cf.xerogravity.space
      traefik.http.routers.traefik.tls.domains[2].sans: '*.cf.xerogravity.space'
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped
    security_opt:
    - no-new-privileges:true
    volumes:
    - type: bind
      source: /etc/localtime
      target: /etc/localtime
      read_only: true
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      read_only: true
    - type: bind
      source: ./container_data/traefik/acme.json
      target: /acme.json
      read_only: false
    - type: bind
      source: ./container_data/traefik/config.yml
      target: /config.yml
      read_only: true
    - type: bind
      source: ./container_data/traefik/traefik.yml
      target: /traefik.yml
      read_only: true
